//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Inputs/InputControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputControls"",
    ""maps"": [
        {
            ""name"": ""MasterControls"",
            ""id"": ""a56ba7a1-bfe7-4c34-b817-14c6e090f170"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""b8a1c85d-de23-425c-abeb-6de118fbcc89"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""JoinButton"",
                    ""type"": ""Button"",
                    ""id"": ""8e662d07-7e98-494f-814c-faccff02cf50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectionLeft"",
                    ""type"": ""Button"",
                    ""id"": ""a21d77ba-222d-4ad8-8123-9148292f94d0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectionRight"",
                    ""type"": ""Button"",
                    ""id"": ""046b02cd-4a88-4334-b5b7-29655c0e15e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""aae95e98-03a4-4dcc-a717-453d83ae88a0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""5e84658f-cca8-420d-982a-a3dacee02cc3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextButton"",
                    ""type"": ""Button"",
                    ""id"": ""bf3e8f50-601e-4630-bcf0-193a92b8b9cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pull"",
                    ""type"": ""Button"",
                    ""id"": ""d95d7e93-cd75-4dcd-99fe-927c2085d723"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""1e83b86e-4cfc-44da-9e95-c5af4e02a95d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3e881c82-9f83-4f70-a36c-014ed16a3e4d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""808f7e62-dbef-488d-b91d-e321a75a9012"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""de9e1986-c047-4688-ad40-d45f054ada19"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""646826b3-54d2-48ae-9517-71c4e6b52dca"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""4f534f22-24af-42ed-b59b-c100d5ee0e5b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""89d7446c-7174-4b32-97ed-ee96e1adee45"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""02bb137e-e291-44fc-939b-22a8b6c3fb39"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c1b67d30-69ca-4940-809d-5c3757a1b201"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9704b42d-62dc-467c-8a32-9c6501ffe037"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7a5be531-2333-422f-8d6c-5a8cc76470e1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ca847c12-93fd-4afa-a238-06e184b3d1d6"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d6f1979e-255c-42d2-a980-04c684b4c1ca"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""622c5338-b38d-4e76-9c85-121234cffa0a"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3f9f18b0-0473-47ae-9005-99cef9172ba4"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/hat/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""396d19e7-aefc-4e8b-917a-04fd7c1de7e1"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JoinButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65424744-e286-48bb-8641-c7f288f60775"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JoinButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39abb34d-0ea4-4489-bdf5-c1f1d72c08eb"",
                    ""path"": ""<HID::Nintendo Wireless Gamepad>/button13"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JoinButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20e027b4-570e-42ab-aeae-20e1befea664"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectionLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28870083-8fa7-4fb9-95fe-2980dbfa1705"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectionLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96f00d42-91d0-4046-b05b-046ad65f08e1"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectionRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5ec6ceb-9241-42aa-9aec-08279c2533bc"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectionRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""57989200-fdaf-410e-a3cb-bf87bc0cfc2d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""88d533ba-9268-47f1-abc3-060ba72d7913"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""42e1d9be-35c1-4d15-9579-c093feba85ae"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""54fc761e-e0e7-4b05-aa99-0f4c28c3d9bc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4a62e67c-2c8c-41cb-b9aa-c31e494be923"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0db40d73-a478-4ced-8fbe-41d47764cb70"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5d7548f7-b052-4fc0-80d0-3ae02850957f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b72f4b5f-6642-4904-8cb2-d773b2f7b394"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09366de4-8bcf-4945-a78e-e9ed57907c51"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""664b113a-4d5f-4a9c-b5cf-76bd83b5a019"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a9b9bcd-c5d5-4c53-8ff7-1c571ed1d8f9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pull"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78bcede5-bb47-40e2-bf0e-ea7b44fa79a1"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pull"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SpinControl1"",
            ""id"": ""a1a06b5b-2c4b-472b-a555-a8fd42c015fb"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""372ce269-6317-4eca-8e56-5bdb50973c44"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""1f02c709-d7f3-4a8f-aca9-0613f238fcd0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""74d6b396-2080-46bf-b59a-475739c44433"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5f91e9ca-57a5-4d19-8a6c-505d4023cfc2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fbf55248-dfd9-4d45-8d14-2714e7e4e83f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2b4f5cd6-bc0f-451c-935e-2cbd27773dad"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""aff46592-eaff-4fca-9ab9-30d21ba539aa"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bd9dcc6d-fe48-4420-ae40-5d13c8d6ebee"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""33f3f8c9-09fb-41ad-812f-4455a452cda2"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a11b281f-c39c-4a3b-b59a-9d1e3ca5a719"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4ef9cd85-1563-4faf-9242-654ec821dabe"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""SpinControl2"",
            ""id"": ""51cf1ed1-4313-422f-b897-a20e8f4dd6fe"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""5bb6de7d-783f-4c16-be93-566f2d60a940"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5004cc7e-029c-41b4-8d96-667bb984b04e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ddb4cfb8-9bea-4f24-9404-264c930e5177"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""31477eeb-ace7-48f9-8018-ff3f331f8fc2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6209014b-8998-4c9b-893e-4039c9e86a19"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""82f96307-ddd5-4e07-a2b0-304d7402187a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""87c3a8b1-f150-4d92-8ae9-2592b182b10c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0b22629c-d60d-4225-b3e1-de02e0b11f95"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0ad07a6b-fade-45bf-8749-e7b69dfd2814"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b04cbe99-4ad5-4f3a-bdc1-97d4c38894ac"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b535afa0-dbe3-48c8-8193-462a829a5fc7"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""SpinControl3"",
            ""id"": ""5b3681fc-1d67-49d5-b955-7d04b0cfaf61"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""b31debcb-8fad-4399-9919-3b4281e6f8e9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""781085c4-174c-4a36-ad85-7af1ce3d3bb9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""34ad0f4d-9aa1-48fe-ae06-44b0d1ab0448"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f0eee10d-0646-400c-8293-e7030131865f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f4518283-6211-46a1-8245-39630ba94df9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3bf23c40-ca98-4a4b-bac5-2227fabb74de"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""8d1de696-2b55-49f3-9b98-947eaf07d4d8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b48dd524-70d7-47f9-af0e-0a52a53b3190"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a48f303f-04f5-452b-a68a-bba7d0301168"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""64dd867b-bbe9-4076-803c-dd3df8e26de9"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e8db42dc-ad8f-4469-a053-9942257f7a19"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Player"",
            ""id"": ""98044bac-d64d-4f7c-9a5a-5cfdd8e8c994"",
            ""actions"": [
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""24205569-f2c8-47db-8943-b8c439609637"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""31f14886-1fae-4461-9de4-27fff71f4101"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StartButton"",
                    ""type"": ""Button"",
                    ""id"": ""df49bc11-d278-489d-b8a4-9af59899a7aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimJoystick"",
                    ""type"": ""Value"",
                    ""id"": ""56a67c00-d194-4a09-9516-5fa035b62a3d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AimKeyboardLeft"",
                    ""type"": ""Button"",
                    ""id"": ""e78813df-8593-4c7e-b91a-4afeefffcf6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimKeyboardRight"",
                    ""type"": ""Button"",
                    ""id"": ""157d56f4-c00b-4c58-b4df-dc8d434399a8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""7fde7746-37af-449f-9504-c5ddaddc2596"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f7926c9b-9de8-4a62-b1bc-7ee6e3b58cfd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e5bbebe-8d21-4268-9d86-98918d3accee"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""af6bb58e-de57-4e40-a8b9-7eb20ef102fa"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b985b270-7232-4725-bee2-4563801a7c34"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""45f41e43-6750-4127-9890-b022b13343c4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""87780122-054f-4e62-a895-fc718eaacc14"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0e46a4f7-5336-40a5-98d8-bb9080f73854"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""930fc435-3efb-4221-a6f2-00eb74bcd7e1"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4abcbf0c-7287-4781-a5e1-b695cc5f929b"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00ab9bb9-07cc-4260-98bd-34079b6bad46"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1465c88e-feea-41ce-9ab5-6f25e202faee"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83ed38a2-172f-4748-8e99-1caf8c03448b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimKeyboardLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08bf58b0-6aed-47ba-bde2-9cb9df4785a7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimKeyboardRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7b14462-db7e-40fa-a5b0-4f3c2907f229"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""421f472b-c4ed-40d2-9df8-3807b903bb64"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CharacterSelectControls"",
            ""id"": ""79751c9b-2660-43ec-8546-26b0148086fa"",
            ""actions"": [
                {
                    ""name"": ""Next"",
                    ""type"": ""Button"",
                    ""id"": ""fc4ee1dd-30da-4d2b-9990-3d4fbcc5dba8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Previous"",
                    ""type"": ""Button"",
                    ""id"": ""7d1030fb-662d-4520-8965-e0c2ec946861"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1bde442a-cec2-4480-b41d-a9bc735197eb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e07c817-e1c4-43ef-bb1c-53b8480ba823"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e30173a-5a0f-46ed-bab1-57654704bb24"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Previous"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a4f4367-d406-4aef-b886-dd7bab8b1d12"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Previous"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MasterControls
        m_MasterControls = asset.FindActionMap("MasterControls", throwIfNotFound: true);
        m_MasterControls_Movement = m_MasterControls.FindAction("Movement", throwIfNotFound: true);
        m_MasterControls_JoinButton = m_MasterControls.FindAction("JoinButton", throwIfNotFound: true);
        m_MasterControls_SelectionLeft = m_MasterControls.FindAction("SelectionLeft", throwIfNotFound: true);
        m_MasterControls_SelectionRight = m_MasterControls.FindAction("SelectionRight", throwIfNotFound: true);
        m_MasterControls_Move = m_MasterControls.FindAction("Move", throwIfNotFound: true);
        m_MasterControls_Jump = m_MasterControls.FindAction("Jump", throwIfNotFound: true);
        m_MasterControls_NextButton = m_MasterControls.FindAction("NextButton", throwIfNotFound: true);
        m_MasterControls_Pull = m_MasterControls.FindAction("Pull", throwIfNotFound: true);
        // SpinControl1
        m_SpinControl1 = asset.FindActionMap("SpinControl1", throwIfNotFound: true);
        m_SpinControl1_Movement = m_SpinControl1.FindAction("Movement", throwIfNotFound: true);
        // SpinControl2
        m_SpinControl2 = asset.FindActionMap("SpinControl2", throwIfNotFound: true);
        m_SpinControl2_Movement = m_SpinControl2.FindAction("Movement", throwIfNotFound: true);
        // SpinControl3
        m_SpinControl3 = asset.FindActionMap("SpinControl3", throwIfNotFound: true);
        m_SpinControl3_Movement = m_SpinControl3.FindAction("Movement", throwIfNotFound: true);
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Shoot = m_Player.FindAction("Shoot", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_StartButton = m_Player.FindAction("StartButton", throwIfNotFound: true);
        m_Player_AimJoystick = m_Player.FindAction("AimJoystick", throwIfNotFound: true);
        m_Player_AimKeyboardLeft = m_Player.FindAction("AimKeyboardLeft", throwIfNotFound: true);
        m_Player_AimKeyboardRight = m_Player.FindAction("AimKeyboardRight", throwIfNotFound: true);
        m_Player_Dash = m_Player.FindAction("Dash", throwIfNotFound: true);
        // CharacterSelectControls
        m_CharacterSelectControls = asset.FindActionMap("CharacterSelectControls", throwIfNotFound: true);
        m_CharacterSelectControls_Next = m_CharacterSelectControls.FindAction("Next", throwIfNotFound: true);
        m_CharacterSelectControls_Previous = m_CharacterSelectControls.FindAction("Previous", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MasterControls
    private readonly InputActionMap m_MasterControls;
    private List<IMasterControlsActions> m_MasterControlsActionsCallbackInterfaces = new List<IMasterControlsActions>();
    private readonly InputAction m_MasterControls_Movement;
    private readonly InputAction m_MasterControls_JoinButton;
    private readonly InputAction m_MasterControls_SelectionLeft;
    private readonly InputAction m_MasterControls_SelectionRight;
    private readonly InputAction m_MasterControls_Move;
    private readonly InputAction m_MasterControls_Jump;
    private readonly InputAction m_MasterControls_NextButton;
    private readonly InputAction m_MasterControls_Pull;
    public struct MasterControlsActions
    {
        private @InputControls m_Wrapper;
        public MasterControlsActions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_MasterControls_Movement;
        public InputAction @JoinButton => m_Wrapper.m_MasterControls_JoinButton;
        public InputAction @SelectionLeft => m_Wrapper.m_MasterControls_SelectionLeft;
        public InputAction @SelectionRight => m_Wrapper.m_MasterControls_SelectionRight;
        public InputAction @Move => m_Wrapper.m_MasterControls_Move;
        public InputAction @Jump => m_Wrapper.m_MasterControls_Jump;
        public InputAction @NextButton => m_Wrapper.m_MasterControls_NextButton;
        public InputAction @Pull => m_Wrapper.m_MasterControls_Pull;
        public InputActionMap Get() { return m_Wrapper.m_MasterControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MasterControlsActions set) { return set.Get(); }
        public void AddCallbacks(IMasterControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_MasterControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MasterControlsActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @JoinButton.started += instance.OnJoinButton;
            @JoinButton.performed += instance.OnJoinButton;
            @JoinButton.canceled += instance.OnJoinButton;
            @SelectionLeft.started += instance.OnSelectionLeft;
            @SelectionLeft.performed += instance.OnSelectionLeft;
            @SelectionLeft.canceled += instance.OnSelectionLeft;
            @SelectionRight.started += instance.OnSelectionRight;
            @SelectionRight.performed += instance.OnSelectionRight;
            @SelectionRight.canceled += instance.OnSelectionRight;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @NextButton.started += instance.OnNextButton;
            @NextButton.performed += instance.OnNextButton;
            @NextButton.canceled += instance.OnNextButton;
            @Pull.started += instance.OnPull;
            @Pull.performed += instance.OnPull;
            @Pull.canceled += instance.OnPull;
        }

        private void UnregisterCallbacks(IMasterControlsActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @JoinButton.started -= instance.OnJoinButton;
            @JoinButton.performed -= instance.OnJoinButton;
            @JoinButton.canceled -= instance.OnJoinButton;
            @SelectionLeft.started -= instance.OnSelectionLeft;
            @SelectionLeft.performed -= instance.OnSelectionLeft;
            @SelectionLeft.canceled -= instance.OnSelectionLeft;
            @SelectionRight.started -= instance.OnSelectionRight;
            @SelectionRight.performed -= instance.OnSelectionRight;
            @SelectionRight.canceled -= instance.OnSelectionRight;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @NextButton.started -= instance.OnNextButton;
            @NextButton.performed -= instance.OnNextButton;
            @NextButton.canceled -= instance.OnNextButton;
            @Pull.started -= instance.OnPull;
            @Pull.performed -= instance.OnPull;
            @Pull.canceled -= instance.OnPull;
        }

        public void RemoveCallbacks(IMasterControlsActions instance)
        {
            if (m_Wrapper.m_MasterControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMasterControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_MasterControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MasterControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MasterControlsActions @MasterControls => new MasterControlsActions(this);

    // SpinControl1
    private readonly InputActionMap m_SpinControl1;
    private List<ISpinControl1Actions> m_SpinControl1ActionsCallbackInterfaces = new List<ISpinControl1Actions>();
    private readonly InputAction m_SpinControl1_Movement;
    public struct SpinControl1Actions
    {
        private @InputControls m_Wrapper;
        public SpinControl1Actions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_SpinControl1_Movement;
        public InputActionMap Get() { return m_Wrapper.m_SpinControl1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SpinControl1Actions set) { return set.Get(); }
        public void AddCallbacks(ISpinControl1Actions instance)
        {
            if (instance == null || m_Wrapper.m_SpinControl1ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SpinControl1ActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
        }

        private void UnregisterCallbacks(ISpinControl1Actions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
        }

        public void RemoveCallbacks(ISpinControl1Actions instance)
        {
            if (m_Wrapper.m_SpinControl1ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISpinControl1Actions instance)
        {
            foreach (var item in m_Wrapper.m_SpinControl1ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SpinControl1ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SpinControl1Actions @SpinControl1 => new SpinControl1Actions(this);

    // SpinControl2
    private readonly InputActionMap m_SpinControl2;
    private List<ISpinControl2Actions> m_SpinControl2ActionsCallbackInterfaces = new List<ISpinControl2Actions>();
    private readonly InputAction m_SpinControl2_Movement;
    public struct SpinControl2Actions
    {
        private @InputControls m_Wrapper;
        public SpinControl2Actions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_SpinControl2_Movement;
        public InputActionMap Get() { return m_Wrapper.m_SpinControl2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SpinControl2Actions set) { return set.Get(); }
        public void AddCallbacks(ISpinControl2Actions instance)
        {
            if (instance == null || m_Wrapper.m_SpinControl2ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SpinControl2ActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
        }

        private void UnregisterCallbacks(ISpinControl2Actions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
        }

        public void RemoveCallbacks(ISpinControl2Actions instance)
        {
            if (m_Wrapper.m_SpinControl2ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISpinControl2Actions instance)
        {
            foreach (var item in m_Wrapper.m_SpinControl2ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SpinControl2ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SpinControl2Actions @SpinControl2 => new SpinControl2Actions(this);

    // SpinControl3
    private readonly InputActionMap m_SpinControl3;
    private List<ISpinControl3Actions> m_SpinControl3ActionsCallbackInterfaces = new List<ISpinControl3Actions>();
    private readonly InputAction m_SpinControl3_Movement;
    public struct SpinControl3Actions
    {
        private @InputControls m_Wrapper;
        public SpinControl3Actions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_SpinControl3_Movement;
        public InputActionMap Get() { return m_Wrapper.m_SpinControl3; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SpinControl3Actions set) { return set.Get(); }
        public void AddCallbacks(ISpinControl3Actions instance)
        {
            if (instance == null || m_Wrapper.m_SpinControl3ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SpinControl3ActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
        }

        private void UnregisterCallbacks(ISpinControl3Actions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
        }

        public void RemoveCallbacks(ISpinControl3Actions instance)
        {
            if (m_Wrapper.m_SpinControl3ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISpinControl3Actions instance)
        {
            foreach (var item in m_Wrapper.m_SpinControl3ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SpinControl3ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SpinControl3Actions @SpinControl3 => new SpinControl3Actions(this);

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Shoot;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_StartButton;
    private readonly InputAction m_Player_AimJoystick;
    private readonly InputAction m_Player_AimKeyboardLeft;
    private readonly InputAction m_Player_AimKeyboardRight;
    private readonly InputAction m_Player_Dash;
    public struct PlayerActions
    {
        private @InputControls m_Wrapper;
        public PlayerActions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Shoot => m_Wrapper.m_Player_Shoot;
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @StartButton => m_Wrapper.m_Player_StartButton;
        public InputAction @AimJoystick => m_Wrapper.m_Player_AimJoystick;
        public InputAction @AimKeyboardLeft => m_Wrapper.m_Player_AimKeyboardLeft;
        public InputAction @AimKeyboardRight => m_Wrapper.m_Player_AimKeyboardRight;
        public InputAction @Dash => m_Wrapper.m_Player_Dash;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @StartButton.started += instance.OnStartButton;
            @StartButton.performed += instance.OnStartButton;
            @StartButton.canceled += instance.OnStartButton;
            @AimJoystick.started += instance.OnAimJoystick;
            @AimJoystick.performed += instance.OnAimJoystick;
            @AimJoystick.canceled += instance.OnAimJoystick;
            @AimKeyboardLeft.started += instance.OnAimKeyboardLeft;
            @AimKeyboardLeft.performed += instance.OnAimKeyboardLeft;
            @AimKeyboardLeft.canceled += instance.OnAimKeyboardLeft;
            @AimKeyboardRight.started += instance.OnAimKeyboardRight;
            @AimKeyboardRight.performed += instance.OnAimKeyboardRight;
            @AimKeyboardRight.canceled += instance.OnAimKeyboardRight;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @StartButton.started -= instance.OnStartButton;
            @StartButton.performed -= instance.OnStartButton;
            @StartButton.canceled -= instance.OnStartButton;
            @AimJoystick.started -= instance.OnAimJoystick;
            @AimJoystick.performed -= instance.OnAimJoystick;
            @AimJoystick.canceled -= instance.OnAimJoystick;
            @AimKeyboardLeft.started -= instance.OnAimKeyboardLeft;
            @AimKeyboardLeft.performed -= instance.OnAimKeyboardLeft;
            @AimKeyboardLeft.canceled -= instance.OnAimKeyboardLeft;
            @AimKeyboardRight.started -= instance.OnAimKeyboardRight;
            @AimKeyboardRight.performed -= instance.OnAimKeyboardRight;
            @AimKeyboardRight.canceled -= instance.OnAimKeyboardRight;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // CharacterSelectControls
    private readonly InputActionMap m_CharacterSelectControls;
    private List<ICharacterSelectControlsActions> m_CharacterSelectControlsActionsCallbackInterfaces = new List<ICharacterSelectControlsActions>();
    private readonly InputAction m_CharacterSelectControls_Next;
    private readonly InputAction m_CharacterSelectControls_Previous;
    public struct CharacterSelectControlsActions
    {
        private @InputControls m_Wrapper;
        public CharacterSelectControlsActions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Next => m_Wrapper.m_CharacterSelectControls_Next;
        public InputAction @Previous => m_Wrapper.m_CharacterSelectControls_Previous;
        public InputActionMap Get() { return m_Wrapper.m_CharacterSelectControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterSelectControlsActions set) { return set.Get(); }
        public void AddCallbacks(ICharacterSelectControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_CharacterSelectControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CharacterSelectControlsActionsCallbackInterfaces.Add(instance);
            @Next.started += instance.OnNext;
            @Next.performed += instance.OnNext;
            @Next.canceled += instance.OnNext;
            @Previous.started += instance.OnPrevious;
            @Previous.performed += instance.OnPrevious;
            @Previous.canceled += instance.OnPrevious;
        }

        private void UnregisterCallbacks(ICharacterSelectControlsActions instance)
        {
            @Next.started -= instance.OnNext;
            @Next.performed -= instance.OnNext;
            @Next.canceled -= instance.OnNext;
            @Previous.started -= instance.OnPrevious;
            @Previous.performed -= instance.OnPrevious;
            @Previous.canceled -= instance.OnPrevious;
        }

        public void RemoveCallbacks(ICharacterSelectControlsActions instance)
        {
            if (m_Wrapper.m_CharacterSelectControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICharacterSelectControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_CharacterSelectControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CharacterSelectControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CharacterSelectControlsActions @CharacterSelectControls => new CharacterSelectControlsActions(this);
    public interface IMasterControlsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJoinButton(InputAction.CallbackContext context);
        void OnSelectionLeft(InputAction.CallbackContext context);
        void OnSelectionRight(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnNextButton(InputAction.CallbackContext context);
        void OnPull(InputAction.CallbackContext context);
    }
    public interface ISpinControl1Actions
    {
        void OnMovement(InputAction.CallbackContext context);
    }
    public interface ISpinControl2Actions
    {
        void OnMovement(InputAction.CallbackContext context);
    }
    public interface ISpinControl3Actions
    {
        void OnMovement(InputAction.CallbackContext context);
    }
    public interface IPlayerActions
    {
        void OnShoot(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnStartButton(InputAction.CallbackContext context);
        void OnAimJoystick(InputAction.CallbackContext context);
        void OnAimKeyboardLeft(InputAction.CallbackContext context);
        void OnAimKeyboardRight(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
    }
    public interface ICharacterSelectControlsActions
    {
        void OnNext(InputAction.CallbackContext context);
        void OnPrevious(InputAction.CallbackContext context);
    }
}
